{"version":3,"sources":["components/Navigation.tsx","components/Search.tsx","routes/Index.tsx","services/api.ts","routes/CocktailDetail.tsx","routes/CocktailList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Navigation","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","Drawer_default","open","variant","List_default","routes","map","route","i","ListItem_default","key","href","path","Button_default","displayName","React","Component","strings","Search","_this","state","value","searchByIngredient","label","toggleStr","changeHandler","bind","assertThisInitialized","toggleHandler","searchHandler","e","setState","target","concat","labelStr","Grid_default","container","className","classes","root","spacing","justify","item","xs","TextField_default","classNames","primaryInput","onChange","placeholder","inputProps","InputProps","InputLabelProps","searchButton","type","toggleButton","onClick","Loop_default","withStyles","theme","createStyles","color","borderColor","marginRight","&:before","&:after","flexGrow","backgroundColor","marginTop","background","border","cursor","Box","posed","div","visible","opacity","hidden","Index","isVisible","pose","gradient","alignItems","fancyFont","searchPosition","components_Search","height","top","backgroundImage","minHeight","padding","fontFamily","fontSize","fontWeight","lineHeight","textShadow","withTheme","URL","searchByName","search","axios","get","then","response","data","CocktailDetail","drink","undefined","ingredients","_this2","match","params","id","setData","drinks","getIngredients","ingredientArray","push","ingredient","measure","_this3","CocktailDetail_Box","cocktailTitle","strDrink","sm","mainImage","src","strDrinkThumb","recipeList","imageWrapper","image","measureWrapper","ingredientWrapper","strInstructions","errorLayout","_cocktailTitle","marginBottom","defineProperty","breakpoints","up","down","textAlign","maxWidth","margin","paddingTop","width","paddingBottom","paddingRight","CocktailList","listLayout","float","navigationRoutes","initialState","isMenuOpen","App","menuHandler","IconButton_default","menuBtnPos","Menu_default","BrowserRouter","components_Navigation","Route","exact","component","position","content","unit","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","contentShift","easeOut","enteringScreen","drawer","flexShrink","drawerPaper","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a7bab6c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\ninterface NavLink {\r\n    displayName: string;\r\n    path: string;\r\n}\r\n\r\ntype Props = {\r\n    routes: NavLink[];\r\n    open: boolean;\r\n}\r\n\r\ntype State = {\r\n\r\n}\r\n\r\nclass Navigation extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Drawer open={this.props.open} variant=\"persistent\">\r\n                <nav>\r\n                    <List>\r\n                    { this.props.routes.map((route, i) => (\r\n                        <ListItem key={i} href={route.path}><Button variant=\"text\" key={i} href={route.path}>{ route.displayName }</Button></ListItem>\r\n                    ))}\r\n                    </List>\r\n                </nav>\r\n            </Drawer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation","import React from 'react';\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\ntype Props = { \r\n    classes: any;\r\n}\r\n\r\ntype State = {\r\n    value: string\r\n    searchByIngredient: boolean\r\n    label: string\r\n    toggleStr: string\r\n}\r\n\r\nconst strings = ['for cocktail', 'by ingredient']\r\n\r\n\r\nconst styles = (theme:any) => createStyles({\r\n    primaryInput: {\r\n        color: 'white !important',\r\n        borderColor: 'white',\r\n        marginRight: '6px',\r\n        '&:before': {\r\n            color: 'white',\r\n            borderColor: 'white'\r\n        },\r\n        '&:after': {\r\n            color: 'white',\r\n            borderColor: 'white'\r\n        }\r\n    },\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    searchButton: {\r\n        backgroundColor: 'white',\r\n        marginTop: '12px'\r\n    },\r\n    toggleButton: {\r\n        background: 'none',\r\n        color: 'black',\r\n        border: 'none',\r\n        cursor: 'pointer'\r\n    }\r\n})\r\n\r\nclass Search extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            value: '',\r\n            searchByIngredient: false,\r\n            label: strings[0],\r\n            toggleStr: strings[1]\r\n        }\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.toggleHandler = this.toggleHandler.bind(this);\r\n        this.searchHandler = this.searchHandler.bind(this);\r\n    }\r\n\r\n    changeHandler(e:React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({value: e.target.value});\r\n    }\r\n\r\n    searchHandler() {\r\n        const buttonURL = this.state.searchByIngredient ? `/browse_cocktails/${this.state.value}` : `/cocktail/${this.state.value}`;\r\n        return buttonURL\r\n    } \r\n\r\n    toggleHandler() {\r\n\r\n        let labelStr = this.state.searchByIngredient ?  strings[0] : strings[1];\r\n        let toggleStr = this.state.searchByIngredient ? strings[1] : strings[0];\r\n        \r\n\r\n\r\n        this.setState({\r\n            searchByIngredient: !this.state.searchByIngredient,\r\n            label: labelStr,\r\n            toggleStr: toggleStr\r\n        });\r\n    }\r\n    \r\n    render() {   \r\n        return (\r\n            <Grid container className={this.props.classes.root} spacing={16} justify=\"center\">\r\n                <Grid item xs={12}>\r\n                    <TextField \r\n                        className={classNames(this.props.classes.primaryInput)} \r\n                        onChange={this.changeHandler} \r\n                        value={this.state.value} \r\n                        placeholder={`Search ${this.state.label}`}\r\n                        label={`Search ${this.state.label}`}\r\n                        inputProps={{className: classNames(this.props.classes.primaryInput)}}\r\n                        InputProps={{className: classNames(this.props.classes.primaryInput)}}\r\n                        InputLabelProps={{className: classNames(this.props.classes.primaryInput)}}\r\n                        />\r\n                    <Button className={classNames(this.props.classes.searchButton)} href={ this.searchHandler() }>Search</Button>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <button type=\"button\" \r\n                        className={classNames(this.props.classes.toggleButton)} \r\n                        onClick={this.toggleHandler}>Search {this.state.toggleStr} \r\n                        <LoopIcon></LoopIcon>\r\n                    </button>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Search)","import React from 'react';\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Search from '../components/Search';\r\n\r\nimport posed from 'react-pose';\r\n\r\ntype Props = {\r\n    classes: any;\r\n}\r\n\r\ntype State = {\r\n    isVisible: boolean\r\n}\r\n\r\nconst Box = posed.div({\r\n    visible: { opacity: 1 },\r\n    hidden: { opacity: 0 }\r\n  });\r\n\r\nconst styles = (theme:any) => createStyles({\r\n    root: {\r\n        height: '100vh'\r\n    },\r\n    gradient: {\r\n        top: 0,\r\n        backgroundColor: '#ED00BB',\r\n        backgroundImage: 'radial-gradient(120% 600px at 50% 200px,#ED00BB,#A100F6 120%)',\r\n        minHeight: '100vh',\r\n        padding: '10px'\r\n    },\r\n    fancyFont: {\r\n        fontFamily: 'Pacifico, Roboto, Arial',\r\n        color: 'white',\r\n        fontSize: '60px',\r\n        fontWeight: 400,\r\n        lineHeight: '70px',\r\n        textShadow: '3px 5px rgba(0,0,0,0.4)'\r\n    },\r\n    searchPosition: {\r\n        marginTop: '-24px'\r\n    }\r\n})\r\n\r\nclass Index extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            isVisible: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isVisible: true\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Box pose={this.state.isVisible ? 'visible' : 'hidden'} className={classNames(this.props.classes.gradient, 'box')}>\r\n                    <Grid container className={this.props.classes.root} spacing={24} justify=\"center\" alignItems=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <h1 className={classNames(this.props.classes.fancyFont)}>The Cocktail Mixer</h1>\r\n                                <div className={classNames(this.props.classes.searchPosition)}>\r\n                                    <Search />\r\n                                </div>\r\n                            </Grid>\r\n                    </Grid>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(Index);","\r\nimport axios from 'axios';\r\n\r\nconst URL = \"https://www.thecocktaildb.com/api/json/v1/1/\";\r\n\r\nconst searchByName = (search:string) => {\r\n    return axios.get(`${URL}/search.php?s=${search}`)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst searchByIngredient = (search:string) => {\r\n    return axios.get(`${URL}/filter.php?i=${search}`)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst searchIngredient = (search:string) => {\r\n    return axios.get(`${URL}/search.php?i=${search}`)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst filterByAlcoholic = (bool:boolean) => {\r\n    const filter = bool ? 'Alcoholic' : 'Non_Alcoholic'; \r\n    return axios.get(`${URL}/filter.php?a=${filter}`)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst filterByCategory = (filter:string) => {\r\n    return axios.get(`${URL}/filter.php?c=${filter}`)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst filterByGlass = (filter:string) => {\r\n    return axios.get(`${URL}/filter.php?g=${filter}`)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst getGlasses = () => {\r\n    return axios.get(`${URL}/list.php?g=list`)\r\n        .then(response => response.data)\r\n}\r\nconst getCategories = () => {\r\n    return axios.get(`${URL}/list.php?c=list`)\r\n        .then(response => response.data)\r\n}\r\nconst getIngredients = () => {\r\n    return axios.get(`${URL}/list.php?i=list`)\r\n        .then(response => response.data)\r\n}\r\nconst getAlcoholic = () => {\r\n    return axios.get(`${URL}/list.php?a=list`)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst lookupId = (id:number) => {\r\n    return axios.get(`${URL}/lookup.php?i=${id}`)\r\n        .then(response => response.data)\r\n}\r\n\r\nconst random = () => {\r\n    return axios.get(`${URL}/random.php`)\r\n        .then(response => response.data)\r\n}\r\n\r\nexport { filterByAlcoholic, filterByCategory, filterByGlass, \r\n    getAlcoholic, getCategories, getGlasses, getIngredients, lookupId,\r\n    random, searchByName, searchByIngredient, searchIngredient};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { match } from 'react-router-dom';\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport posed from 'react-pose';\r\n\r\nimport { searchByName, random } from '../services/api';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Search from '../components/Search';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\ninterface matchProps {\r\n    id: string\r\n}\r\n\r\ninterface Ingredient {\r\n    ingredient: string;\r\n    measure: string;\r\n}\r\n\r\ntype Props = {\r\n  match: match<matchProps>;\r\n  classes: any;\r\n}\r\n\r\ntype State = {\r\n    drink: any;\r\n    ingredients?: Ingredient[];\r\n    isVisible: boolean;\r\n}\r\n\r\nconst Box = posed.div({\r\n    visible: { opacity: 1 },\r\n    hidden: { opacity: 0 }\r\n  });\r\n\r\nconst styles = (theme:any) => createStyles({\r\n    cocktailTitle: {\r\n        fontFamily: 'Pacifico, Roboto, Arial',\r\n        marginBottom: '0',\r\n        [theme.breakpoints.up('sm')]: {\r\n            fontSize: '60px',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '34px',\r\n        },\r\n    },\r\n    errorLayout: {\r\n            height: '100vh'\r\n    },\r\n    root: {\r\n        textAlign: 'left',\r\n        maxWidth: '1200px',\r\n        margin: '0 auto',\r\n        paddingTop: '50px',\r\n        width: '100%',\r\n        paddingBottom: '24px'\r\n    },\r\n    imageWrapper: {\r\n        width: '50px',\r\n        height: '50px',\r\n        padding: '0 12px 0 0'\r\n    },\r\n    image: {\r\n        width: '100%'\r\n    },\r\n    ingredientWrapper: {\r\n    },\r\n    mainImage: {\r\n        maxWidth: '100%'\r\n    },\r\n    measureWrapper: {\r\n        fontWeight: 'bold',\r\n        paddingRight: '12px'\r\n    },\r\n    recipeList: {\r\n        width: '100%'\r\n    },\r\n    gradient: {\r\n        top: 0,\r\n        backgroundColor: '#ED00BB',\r\n        backgroundImage: 'radial-gradient(120% 600px at 50% 200px,#ED00BB,#A100F6 120%)',\r\n        minHeight: '100vh',\r\n        padding: '10px'\r\n    },\r\n})\r\n\r\nclass CocktailDetail extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            drink: undefined,\r\n            ingredients: undefined,\r\n            isVisible: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.id === \"random\") {\r\n            random()\r\n                .then(data => {\r\n                    this.setData(data);\r\n                    this.setState({\r\n                        isVisible: true\r\n                    })\r\n                })\r\n        } else {\r\n            searchByName(this.props.match.params.id)\r\n                .then(data => {\r\n                    this.setData(data);\r\n                    this.setState({\r\n                        isVisible: true\r\n                    })\r\n                })\r\n            }\r\n        \r\n    }\r\n\r\n    setData(data:any) {\r\n        if (data.drinks) {\r\n            this.setState({\r\n                drink: data.drinks[0],\r\n                ingredients: this.getIngredients(data.drinks[0])\r\n            })\r\n        }\r\n    }\r\n\r\n    getIngredients(drink: any) {\r\n        let i = 1;\r\n        let ingredientArray = [];\r\n\r\n        while(drink[`strIngredient${i}`]) {\r\n            ingredientArray.push({ingredient: drink[`strIngredient${i}`], measure: drink[`strMeasure${i}`]}),\r\n            i++\r\n        }\r\n        return ingredientArray\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.drink && this.state.ingredients) {\r\n            return (\r\n                <Box pose={this.state.isVisible ? 'visible' : 'hidden'} className={'box'}>\r\n                    <Grid container className={this.props.classes.root} spacing={24} justify=\"center\" >\r\n                        <Grid item xs={12}>\r\n                            <h1 className={this.props.classes.cocktailTitle}>{ this.state.drink.strDrink } </h1>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <div className={this.props.classes.mainImage}>\r\n                                <img className={this.props.classes.mainImage} src={this.state.drink.strDrinkThumb} />\r\n                            </div>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12} sm={6} >\r\n                            <List className={this.props.classes.recipeList}>\r\n                                { this.state.ingredients.map((ingredient, i) => \r\n                                    (<ListItem key={i}>\r\n                                        <div className={this.props.classes.imageWrapper}>\r\n                                            <img className={this.props.classes.image} src={`https://www.thecocktaildb.com/images/ingredients/${ingredient.ingredient}-Small.png`} />\r\n                                        </div>\r\n                                        <div className={this.props.classes.measureWrapper}>\r\n                                            <span >{ingredient.measure}</span>\r\n                                        </div>\r\n                                        <div className={this.props.classes.ingredientWrapper}>\r\n                                            <span>{ingredient.ingredient}</span> \r\n                                        </div>\r\n                                        \r\n                                    </ListItem>)\r\n                                ) }\r\n                            </List>\r\n                            <h3>Method</h3>\r\n                            {this.state.drink.strInstructions}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            );\r\n        } else {\r\n            return  <div className={this.props.classes.gradient}>\r\n                <Grid container className={this.props.classes.errorLayout} spacing={24} justify=\"center\" alignItems=\"center\">\r\n                    <Grid item xs={12}>\r\n                    Sorry, we don't have that one\r\n                    <Search />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(CocktailDetail)","import React from 'react';\r\nimport { match } from 'react-router-dom';\r\n\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { searchByName, searchByIngredient } from '../services/api';\r\n\r\ninterface matchProps {\r\n    id: string\r\n}\r\n\r\n\r\ntype Props = {\r\n    match: match<matchProps>;\r\n    classes: any;\r\n}\r\n\r\ntype State = {\r\n    drinks?: any[];\r\n}\r\n\r\nconst styles = (theme:any) => createStyles({\r\n    root: {\r\n        textAlign: 'left',\r\n        maxWidth: '1200px',\r\n        margin: '0 auto',\r\n        paddingTop: '50px',\r\n        width: '100%'\r\n    },\r\n    cocktailTitle: {\r\n        fontFamily: 'Pacifico, Roboto, Arial',\r\n        [theme.breakpoints.down('xs')]: {\r\n            textAlign: 'center'\r\n        },\r\n        marginBottom: '0'\r\n    },\r\n    listLayout: {\r\n        width: '33.33%',\r\n        float: 'left',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100%',\r\n            textAlign: 'center',\r\n            float: 'none'\r\n        },\r\n    },\r\n    errorLayout: {\r\n        height: \"100vh\"\r\n    }\r\n})\r\n\r\nclass CocktailList extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            drinks: undefined\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.id) {\r\n            searchByIngredient(this.props.match.params.id)\r\n                .then(data => {\r\n                    this.setState({\r\n                        drinks: data.drinks\r\n                    })\r\n                })\r\n        } else {\r\n            searchByName('')\r\n            .then(data => {\r\n                this.setState({\r\n                    drinks: data.drinks\r\n                })\r\n            })\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.drinks) {\r\n            return (\r\n                <Grid container className={this.props.classes.root} spacing={24} justify=\"center\" >\r\n                    <Grid item xs={12}>\r\n                        <h1 className={this.props.classes.cocktailTitle}>Cocktail List </h1>\r\n                        <List>\r\n                            { this.state.drinks ? this.state.drinks.map(\r\n                                (drink, i ) =>  (<ListItem key={i} className={this.props.classes.listLayout}><Button variant=\"text\" href={`/cocktail/${drink.strDrink}`}>{drink.strDrink}</Button></ListItem>)) : ''}\r\n                        </List>\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n        } else {\r\n           return <Grid container className={this.props.classes.errorLayout} spacing={24} justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12}>\r\n                <p>Sorry no drinks match your search</p>\r\n            </Grid>\r\n            </Grid>\r\n        }\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(CocktailList)","import React, { Component } from 'react';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport {BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport classNames from 'classnames';\n\nimport logo from './logo.svg';\nimport './App.css';\n\n// Material UI components\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n// App components\nimport Navigation from './components/Navigation';\n\n// Route components\nimport Index from './routes/Index';\nimport CocktailDetail from './routes/CocktailDetail';\nimport CocktailList from './routes/CocktailList';\n\n\nconst navigationRoutes = [\n  { displayName: 'Home', path: '/'},\n  { displayName: 'Browse Cocktails', path: '/browse_cocktails'},\n  { displayName: 'Random Cocktail', path: '/cocktail/random'}\n]\n\ntype Props = {\n  classes: any;\n}\n\ntype State = {\n  isMenuOpen: boolean;\n}\n\nconst initialState = {\n  isMenuOpen: false\n}\n\nconst drawerWidth = 240;\n\nconst styles = (theme:any) => createStyles({\n  menuBtnPos: {\n    position: 'absolute',\n    top: '24px',\n    padding: '12px 0'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n})\n\nclass App extends Component<Props, State> {\n  constructor(props:Props) {\n    super(props);\n    this.state = initialState;\n    this.menuHandler = this.menuHandler.bind(this)\n  }\n\n  menuHandler() {\n    this.setState({\n      isMenuOpen: !this.state.isMenuOpen\n    })\n    \n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <IconButton className={classNames(this.props.classes.menuBtnPos)} onClick={this.menuHandler}>\n          <MenuIcon />\n        </IconButton>\n        <Router>\n          <div>\n            <Navigation routes={ navigationRoutes } open={this.state.isMenuOpen} />\n            <Route path='/' exact component={Index} />\n            <Route path='/browse_cocktails/:id?' component={CocktailList} />\n            <Route path='/cocktail/:id' component={CocktailDetail} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, {withTheme: true})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}